from Spotfire.Dxp.Data import DataFunctionDefinitionBuilder, DataType

def add_output_params_if_missing(dfname, outputvars):
    """
    Adds missing output parameters (as DataType.Table) to an existing Data Function.

    :param dfname: Name of the Data Function in Document.Data.DataFunctions
    :param outputvars: List of output parameter names (table names), e.g., ["output1", "summary_table"]
    """
    # Find the data function definition
    existing_definition = None
    for df in Document.Data.DataFunctions:
        if df.Name == dfname:
            existing_definition = df
            break

    if existing_definition is None:
        raise Exception("Data Function '" + dfname + "' not found.")

    # Get script and language
    script = existing_definition.ScriptDefinition.Script
    language = existing_definition.ScriptDefinition.ScriptLanguage

    # Set up builder
    builder = DataFunctionDefinitionBuilder(language)
    builder.Script = script

    # Get existing output names
    existing_outputs = [p.Name for p in existing_definition.Parameters if p.IsOutput]

    # Re-add all current parameters
    for param in existing_definition.Parameters:
        if param.IsOutput:
            builder.AddOutputParameter(param.Name, param.Type)
        else:
            builder.AddInputParameter(param.Name, param.Type)

    # Add only missing output table parameters
    added_any = False
    for param_name in outputvars:
        if param_name not in existing_outputs:
            builder.AddOutputParameter(param_name, DataType.Table)
            added_any = True
            print("Added missing output parameter: " + param_name)
        else:
            print("Output parameter already exists: " + param_name)

    # Replace only if needed
    if added_any:
        new_definition = builder.Build()
        Document.Data.DataFunctions.Remove(existing_definition)
        Document.Data.DataFunctions.Add(new_definition)
        print("Data function '" + dfname + "' updated.")
    else:
        print("No changes made to data function '" + dfname + "'.")
